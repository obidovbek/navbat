{"version":3,"file":"ngx-print-element.js.map","sources":["ng://ngx-print-element/lib/ngx-print-element.helper.ts","ng://ngx-print-element/lib/ngx-print-element.service.ts","ng://ngx-print-element/lib/ngx-print-element.directive.ts","ng://ngx-print-element/lib/ngx-print-element.component.ts","ng://ngx-print-element/lib/ngx-print-element.module.ts"],"sourcesContent":["/**\n * callPrint\n * @param printWindow \n * @param iframe \n */\nexport const callPrint = (printWindow: any, iframe: any) => {\n  if (printWindow && printWindow.printPage) {\n    printWindow.printPage();\n    if (iframe) {\n      document.body.removeChild(iframe);\n    }\n  } else {\n    setTimeout(() => {\n      callPrint(printWindow, iframe);\n    }, 50);\n  }\n};\n\n/**\n * getBaseHref\n * @returns \n */\nexport const getBaseHref = () => {\n  const port = (window.location.port) ? `:${window.location.port}` : '';\n  return `${window.location.protocol}//${window.location.hostname}${port}${window.location.pathname}`;\n};\n\n/**\n * getMarkup\n * @param elementHtml \n * @param options \n * @returns \n */\nexport const getMarkup = (elementHtml: any, options: any) => {\n  const template = options.templateString;\n  const templateRegex = new RegExp(/{{\\s*printBody\\s*}}/gi);\n  let stylesheets;\n  let styles;\n  const html = [];\n\n  if (template && templateRegex.test(template)) {\n    elementHtml = template.replace(templateRegex, elementHtml);\n  }\n\n  html.push(`<html><head><title>${options.pageTitle || ''}</title>`);\n\n  // If stylesheet URL's or list of stylesheet URL's are specified, override page stylesheets\n  if (options.stylesheets) {\n    stylesheets = Array.isArray(options.stylesheets) ? options.stylesheets : [options.stylesheets];\n  } else {\n    stylesheets = Array.prototype.slice\n      .call(document.getElementsByTagName('link'))\n      .map(link => link);\n  }\n\n  stylesheets.forEach((f: any) => {\n    html.push(`<link rel=\"${f.rel}\" href=\"${f.href}\">`);\n  });\n\n  // If inline styles or list of inline styles are specified, override inline styles\n  if (options.styles) {\n    styles = Array.isArray(options.styles) ? [...options.styles, `.print-none { display: none; }`] : [options.styles + `.print-none { display: none; }`];\n  } else {\n    styles = Array.prototype.slice\n      .call(document.getElementsByTagName('style'))\n      .map(style => style.innerHTML);\n  }\n\n  styles.forEach((style: any) => {\n    html.push(`<style type=\"text/css\">${style}</style>`);\n  });\n\n  html.push(`<base href=\"${getBaseHref()}\"/>`);\n  html.push('</head><body class=\"pe-body\">');\n  html.push(elementHtml);\n  html.push(`\n    <script type=\"text/javascript\">\n      function printPage() {\n        focus();\n        print();\n        ${options.printMode.toLowerCase() === 'popup' ? 'close();' : ''}\n      }\n    </script>\n  `);\n  html.push('</body></html>');\n\n  return html.join('');\n};\n\n/**\n * printHtml\n * @param element \n * @param selfOptions \n */\nexport const printHtml = (element: any, selfOptions = {}) => {\n  const defaultOptions = {\n    htmlType: 'domObj',\n    printMode: 'template',\n    pageTitle: '',\n    templateString: '',\n    popupProperties: '',\n    stylesheets: null,\n    styles: null\n  };\n  const options = { ...defaultOptions, ...selfOptions };\n  let html = element;\n  if (options.htmlType === 'domObj') {\n    html = element.outerHTML;\n  }\n\n  // Get markup to be printed\n  const markup = getMarkup(html, options);\n  let printWindow;\n  let printIframe;\n  let printDocument: any;\n  let printElementID;\n\n  if (options.printMode.toLowerCase() === 'popup') {\n    printWindow = window.open('about:blank', 'printElementWindow', options.popupProperties);\n    printDocument = printWindow && printWindow.document;\n  } else {\n    printElementID = `printElement_${(Math.round(Math.random() * 99999)).toString()}`;\n\n    printIframe = document.createElement('iframe');\n    printIframe.setAttribute('id', printElementID);\n    printIframe.setAttribute('src', 'about:blank');\n    printIframe.setAttribute('frameBorder', '0');\n    printIframe.setAttribute('scrolling', 'no');\n    printIframe.setAttribute('style', 'position:fixed;bottom:100%;right:100%;');\n\n    document.body.appendChild(printIframe);\n\n    printDocument = (printIframe.contentWindow || printIframe.contentDocument);\n    if (printDocument.document) {\n      printDocument = printDocument.document;\n    }\n\n    printIframe = (document as any).frames ? (document as any).frames[printElementID] : document.getElementById(printElementID);\n    printWindow = printIframe.contentWindow || printIframe;\n  }\n\n  focus();\n  printDocument.open();\n\n  // SetTimeout fixesiframe printMode does not work in firefox\n  setTimeout(() => {\n    printDocument.write(markup);\n    printDocument.close();\n  });\n\n  callPrint(printWindow, printIframe);\n};\n","import { Injectable } from '@angular/core';\nimport { printHtml } from './ngx-print-element.helper';\n\nexport interface Config {\n  htmlType?: string;\n  printMode?: string;\n  pageTitle?: string;\n  templateString?: string;\n  popupProperties?: string;\n  stylesheets?: { \n    rel?: string, \n    href?: string\n  }[],\n  styles?: string[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxPrintElementService {\n\n  /**\n   * Print\n   * @param id \n   * @param config \n   * @returns \n   */\n  public print(id: string, config?: Config): void {\n    // Create and insert new print section\n    const container = document.getElementById(id);\n    switch (config && config.printMode) {\n      case 'template':\n        printHtml(container, { ...config, printMode: '' });\n        break;\n      case 'template-popup':\n        printHtml(container, { ...config, printMode: 'popup' });\n        break;\n      default:\n        if (container) {\n          // Declare\n          const domClone = container.cloneNode(true);\n          const $printSection = document.createElement('div');\n          // Add visibility hidden into body\n          const bodyEl = document.querySelector('body');\n          if (bodyEl) {\n            bodyEl.setAttribute('style', 'visibility: hidden !important;');\n          }\n          // Clone element container\n          $printSection.id = 'ngx-print-element';\n          $printSection.appendChild(domClone);\n          document.body.insertBefore($printSection, document.body.firstChild);\n          // Print\n          window.print();\n          // Clean up print section for future use\n          const oldElem = document.getElementById('ngx-print-element');\n          if (oldElem) {\n            oldElem.parentNode && oldElem.parentNode.removeChild(oldElem);\n            oldElem.remove();\n          }\n          // Clear visibility: hidden\n          bodyEl && (bodyEl.style.visibility = '');\n        }\n        break;\n    }\n  }\n}\n","import { Directive, HostListener, Input } from '@angular/core';\nimport { NgxPrintElementService } from './ngx-print-element.service';\n\n@Directive({\n  selector: '[print]'\n})\nexport class NgxPrintElementDirective {\n  @Input() print: any[] = [];\n\n  constructor(private prints: NgxPrintElementService) { }\n\n  /**\n   * Print\n   * @param event \n   */\n  @HostListener('click', ['$event']) onClick(event: any) {\n    if (this.print && this.print.length === 1) {\n      this.prints.print(this.print[0]);\n    }\n    if (this.print && this.print.length === 2) {\n      this.prints.print(this.print[0], this.print[1]);\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { Config, NgxPrintElementService } from './ngx-print-element.service';\n\n@Component({\n  selector: 'ngx-print-element',\n  template: `<ng-content></ng-content>`,\n  exportAs: 'element'\n})\nexport class NgxPrintElementComponent {\n\n  constructor(private prints: NgxPrintElementService) { }\n\n  /**\n   * print\n   * @param id \n   * @param config \n   */\n  public print(id: string, config?: Config): void {\n    this.prints.print(id, config);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxPrintElementComponent } from './ngx-print-element.component';\nimport { NgxPrintElementDirective } from './ngx-print-element.directive';\n\n\n@NgModule({\n  declarations: [\n    NgxPrintElementComponent,\n    NgxPrintElementDirective\n  ],\n  exports: [\n    NgxPrintElementComponent,\n    NgxPrintElementDirective\n  ]\n})\nexport class NgxPrintElementModule { }\n"],"names":[],"mappings":"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"}
