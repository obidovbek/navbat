/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, HostListener, Input } from '@angular/core';
import { NgxPrintElementService } from './ngx-print-element.service';
var NgxPrintElementDirective = /** @class */ (function () {
    function NgxPrintElementDirective(prints) {
        this.prints = prints;
        this.print = [];
    }
    /**
     * Print
     * @param event
     */
    /**
     * Print
     * @param {?} event
     * @return {?}
     */
    NgxPrintElementDirective.prototype.onClick = /**
     * Print
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.print && this.print.length === 1) {
            this.prints.print(this.print[0]);
        }
        if (this.print && this.print.length === 2) {
            this.prints.print(this.print[0], this.print[1]);
        }
    };
    NgxPrintElementDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[print]'
                },] }
    ];
    NgxPrintElementDirective.ctorParameters = function () { return [
        { type: NgxPrintElementService }
    ]; };
    NgxPrintElementDirective.propDecorators = {
        print: [{ type: Input }],
        onClick: [{ type: HostListener, args: ['click', ['$event'],] }]
    };
    return NgxPrintElementDirective;
}());
export { NgxPrintElementDirective };
if (false) {
    /** @type {?} */
    NgxPrintElementDirective.prototype.print;
    /**
     * @type {?}
     * @private
     */
    NgxPrintElementDirective.prototype.prints;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXByaW50LWVsZW1lbnQuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXByaW50LWVsZW1lbnQvIiwic291cmNlcyI6WyJsaWIvbmd4LXByaW50LWVsZW1lbnQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDL0QsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFckU7SUFNRSxrQ0FBb0IsTUFBOEI7UUFBOUIsV0FBTSxHQUFOLE1BQU0sQ0FBd0I7UUFGekMsVUFBSyxHQUFVLEVBQUUsQ0FBQztJQUUyQixDQUFDO0lBRXZEOzs7T0FHRzs7Ozs7O0lBQ2dDLDBDQUFPOzs7OztJQUExQyxVQUEyQyxLQUFVO1FBQ25ELElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDekMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ2xDO1FBQ0QsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUN6QyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNqRDtJQUNILENBQUM7O2dCQW5CRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFNBQVM7aUJBQ3BCOzs7Z0JBSlEsc0JBQXNCOzs7d0JBTTVCLEtBQUs7MEJBUUwsWUFBWSxTQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQzs7SUFRbkMsK0JBQUM7Q0FBQSxBQXBCRCxJQW9CQztTQWpCWSx3QkFBd0I7OztJQUNuQyx5Q0FBMkI7Ozs7O0lBRWYsMENBQXNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0TGlzdGVuZXIsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ3hQcmludEVsZW1lbnRTZXJ2aWNlIH0gZnJvbSAnLi9uZ3gtcHJpbnQtZWxlbWVudC5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3ByaW50XSdcbn0pXG5leHBvcnQgY2xhc3MgTmd4UHJpbnRFbGVtZW50RGlyZWN0aXZlIHtcbiAgQElucHV0KCkgcHJpbnQ6IGFueVtdID0gW107XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwcmludHM6IE5neFByaW50RWxlbWVudFNlcnZpY2UpIHsgfVxuXG4gIC8qKlxuICAgKiBQcmludFxuICAgKiBAcGFyYW0gZXZlbnQgXG4gICAqL1xuICBASG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50J10pIG9uQ2xpY2soZXZlbnQ6IGFueSkge1xuICAgIGlmICh0aGlzLnByaW50ICYmIHRoaXMucHJpbnQubGVuZ3RoID09PSAxKSB7XG4gICAgICB0aGlzLnByaW50cy5wcmludCh0aGlzLnByaW50WzBdKTtcbiAgICB9XG4gICAgaWYgKHRoaXMucHJpbnQgJiYgdGhpcy5wcmludC5sZW5ndGggPT09IDIpIHtcbiAgICAgIHRoaXMucHJpbnRzLnByaW50KHRoaXMucHJpbnRbMF0sIHRoaXMucHJpbnRbMV0pO1xuICAgIH1cbiAgfVxufVxuIl19