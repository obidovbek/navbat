/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { printHtml } from './ngx-print-element.helper';
import * as i0 from "@angular/core";
/**
 * @record
 */
export function Config() { }
if (false) {
    /** @type {?|undefined} */
    Config.prototype.htmlType;
    /** @type {?|undefined} */
    Config.prototype.printMode;
    /** @type {?|undefined} */
    Config.prototype.pageTitle;
    /** @type {?|undefined} */
    Config.prototype.templateString;
    /** @type {?|undefined} */
    Config.prototype.popupProperties;
    /** @type {?|undefined} */
    Config.prototype.stylesheets;
    /** @type {?|undefined} */
    Config.prototype.styles;
}
var NgxPrintElementService = /** @class */ (function () {
    function NgxPrintElementService() {
    }
    /**
     * Print
     * @param id
     * @param config
     * @returns
     */
    /**
     * Print
     * @param {?} id
     * @param {?=} config
     * @return {?}
     */
    NgxPrintElementService.prototype.print = /**
     * Print
     * @param {?} id
     * @param {?=} config
     * @return {?}
     */
    function (id, config) {
        // Create and insert new print section
        /** @type {?} */
        var container = document.getElementById(id);
        switch (config && config.printMode) {
            case 'template':
                printHtml(container, tslib_1.__assign({}, config, { printMode: '' }));
                break;
            case 'template-popup':
                printHtml(container, tslib_1.__assign({}, config, { printMode: 'popup' }));
                break;
            default:
                if (container) {
                    // Declare
                    /** @type {?} */
                    var domClone = container.cloneNode(true);
                    /** @type {?} */
                    var $printSection = document.createElement('div');
                    // Add visibility hidden into body
                    /** @type {?} */
                    var bodyEl = document.querySelector('body');
                    if (bodyEl) {
                        bodyEl.setAttribute('style', 'visibility: hidden !important;');
                    }
                    // Clone element container
                    $printSection.id = 'ngx-print-element';
                    $printSection.appendChild(domClone);
                    document.body.insertBefore($printSection, document.body.firstChild);
                    // Print
                    window.print();
                    // Clean up print section for future use
                    /** @type {?} */
                    var oldElem = document.getElementById('ngx-print-element');
                    if (oldElem) {
                        oldElem.parentNode && oldElem.parentNode.removeChild(oldElem);
                        oldElem.remove();
                    }
                    // Clear visibility: hidden
                    bodyEl && (bodyEl.style.visibility = '');
                }
                break;
        }
    };
    NgxPrintElementService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ NgxPrintElementService.ngInjectableDef = i0.defineInjectable({ factory: function NgxPrintElementService_Factory() { return new NgxPrintElementService(); }, token: NgxPrintElementService, providedIn: "root" });
    return NgxPrintElementService;
}());
export { NgxPrintElementService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXByaW50LWVsZW1lbnQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1wcmludC1lbGVtZW50LyIsInNvdXJjZXMiOlsibGliL25neC1wcmludC1lbGVtZW50LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7Ozs7QUFFdkQsNEJBV0M7OztJQVZDLDBCQUFrQjs7SUFDbEIsMkJBQW1COztJQUNuQiwyQkFBbUI7O0lBQ25CLGdDQUF3Qjs7SUFDeEIsaUNBQXlCOztJQUN6Qiw2QkFHSTs7SUFDSix3QkFBa0I7O0FBR3BCO0lBQUE7S0FpREM7SUE1Q0M7Ozs7O09BS0c7Ozs7Ozs7SUFDSSxzQ0FBSzs7Ozs7O0lBQVosVUFBYSxFQUFVLEVBQUUsTUFBZTs7O1lBRWhDLFNBQVMsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQztRQUM3QyxRQUFRLE1BQU0sSUFBSSxNQUFNLENBQUMsU0FBUyxFQUFFO1lBQ2xDLEtBQUssVUFBVTtnQkFDYixTQUFTLENBQUMsU0FBUyx1QkFBTyxNQUFNLElBQUUsU0FBUyxFQUFFLEVBQUUsSUFBRyxDQUFDO2dCQUNuRCxNQUFNO1lBQ1IsS0FBSyxnQkFBZ0I7Z0JBQ25CLFNBQVMsQ0FBQyxTQUFTLHVCQUFPLE1BQU0sSUFBRSxTQUFTLEVBQUUsT0FBTyxJQUFHLENBQUM7Z0JBQ3hELE1BQU07WUFDUjtnQkFDRSxJQUFJLFNBQVMsRUFBRTs7O3dCQUVQLFFBQVEsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQzs7d0JBQ3BDLGFBQWEsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQzs7O3dCQUU3QyxNQUFNLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUM7b0JBQzdDLElBQUksTUFBTSxFQUFFO3dCQUNWLE1BQU0sQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLGdDQUFnQyxDQUFDLENBQUM7cUJBQ2hFO29CQUNELDBCQUEwQjtvQkFDMUIsYUFBYSxDQUFDLEVBQUUsR0FBRyxtQkFBbUIsQ0FBQztvQkFDdkMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztvQkFDcEMsUUFBUSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsYUFBYSxFQUFFLFFBQVEsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7b0JBQ3BFLFFBQVE7b0JBQ1IsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDOzs7d0JBRVQsT0FBTyxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsbUJBQW1CLENBQUM7b0JBQzVELElBQUksT0FBTyxFQUFFO3dCQUNYLE9BQU8sQ0FBQyxVQUFVLElBQUksT0FBTyxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7d0JBQzlELE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQztxQkFDbEI7b0JBQ0QsMkJBQTJCO29CQUMzQixNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFVBQVUsR0FBRyxFQUFFLENBQUMsQ0FBQztpQkFDMUM7Z0JBQ0QsTUFBTTtTQUNUO0lBQ0gsQ0FBQzs7Z0JBaERGLFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7OztpQ0FsQkQ7Q0FpRUMsQUFqREQsSUFpREM7U0E5Q1ksc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgcHJpbnRIdG1sIH0gZnJvbSAnLi9uZ3gtcHJpbnQtZWxlbWVudC5oZWxwZXInO1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbmZpZyB7XG4gIGh0bWxUeXBlPzogc3RyaW5nO1xuICBwcmludE1vZGU/OiBzdHJpbmc7XG4gIHBhZ2VUaXRsZT86IHN0cmluZztcbiAgdGVtcGxhdGVTdHJpbmc/OiBzdHJpbmc7XG4gIHBvcHVwUHJvcGVydGllcz86IHN0cmluZztcbiAgc3R5bGVzaGVldHM/OiB7IFxuICAgIHJlbD86IHN0cmluZywgXG4gICAgaHJlZj86IHN0cmluZ1xuICB9W10sXG4gIHN0eWxlcz86IHN0cmluZ1tdO1xufVxuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBOZ3hQcmludEVsZW1lbnRTZXJ2aWNlIHtcblxuICAvKipcbiAgICogUHJpbnRcbiAgICogQHBhcmFtIGlkIFxuICAgKiBAcGFyYW0gY29uZmlnIFxuICAgKiBAcmV0dXJucyBcbiAgICovXG4gIHB1YmxpYyBwcmludChpZDogc3RyaW5nLCBjb25maWc/OiBDb25maWcpOiB2b2lkIHtcbiAgICAvLyBDcmVhdGUgYW5kIGluc2VydCBuZXcgcHJpbnQgc2VjdGlvblxuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTtcbiAgICBzd2l0Y2ggKGNvbmZpZyAmJiBjb25maWcucHJpbnRNb2RlKSB7XG4gICAgICBjYXNlICd0ZW1wbGF0ZSc6XG4gICAgICAgIHByaW50SHRtbChjb250YWluZXIsIHsgLi4uY29uZmlnLCBwcmludE1vZGU6ICcnIH0pO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3RlbXBsYXRlLXBvcHVwJzpcbiAgICAgICAgcHJpbnRIdG1sKGNvbnRhaW5lciwgeyAuLi5jb25maWcsIHByaW50TW9kZTogJ3BvcHVwJyB9KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAoY29udGFpbmVyKSB7XG4gICAgICAgICAgLy8gRGVjbGFyZVxuICAgICAgICAgIGNvbnN0IGRvbUNsb25lID0gY29udGFpbmVyLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICBjb25zdCAkcHJpbnRTZWN0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgLy8gQWRkIHZpc2liaWxpdHkgaGlkZGVuIGludG8gYm9keVxuICAgICAgICAgIGNvbnN0IGJvZHlFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcbiAgICAgICAgICBpZiAoYm9keUVsKSB7XG4gICAgICAgICAgICBib2R5RWwuc2V0QXR0cmlidXRlKCdzdHlsZScsICd2aXNpYmlsaXR5OiBoaWRkZW4gIWltcG9ydGFudDsnKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gQ2xvbmUgZWxlbWVudCBjb250YWluZXJcbiAgICAgICAgICAkcHJpbnRTZWN0aW9uLmlkID0gJ25neC1wcmludC1lbGVtZW50JztcbiAgICAgICAgICAkcHJpbnRTZWN0aW9uLmFwcGVuZENoaWxkKGRvbUNsb25lKTtcbiAgICAgICAgICBkb2N1bWVudC5ib2R5Lmluc2VydEJlZm9yZSgkcHJpbnRTZWN0aW9uLCBkb2N1bWVudC5ib2R5LmZpcnN0Q2hpbGQpO1xuICAgICAgICAgIC8vIFByaW50XG4gICAgICAgICAgd2luZG93LnByaW50KCk7XG4gICAgICAgICAgLy8gQ2xlYW4gdXAgcHJpbnQgc2VjdGlvbiBmb3IgZnV0dXJlIHVzZVxuICAgICAgICAgIGNvbnN0IG9sZEVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmd4LXByaW50LWVsZW1lbnQnKTtcbiAgICAgICAgICBpZiAob2xkRWxlbSkge1xuICAgICAgICAgICAgb2xkRWxlbS5wYXJlbnROb2RlICYmIG9sZEVsZW0ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChvbGRFbGVtKTtcbiAgICAgICAgICAgIG9sZEVsZW0ucmVtb3ZlKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIENsZWFyIHZpc2liaWxpdHk6IGhpZGRlblxuICAgICAgICAgIGJvZHlFbCAmJiAoYm9keUVsLnN0eWxlLnZpc2liaWxpdHkgPSAnJyk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG59XG4iXX0=