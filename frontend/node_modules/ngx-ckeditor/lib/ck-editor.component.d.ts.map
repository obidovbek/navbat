{"version":3,"file":"ck-editor.component.d.ts","sources":["ck-editor.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewChecked, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare class CKEditorComponent implements OnInit, OnDestroy, OnChanges, AfterViewChecked, ControlValueAccessor {\r\n    private ngZone;\r\n    private hostEl;\r\n    private static idx;\r\n    private ckIns;\r\n    private innerValue;\r\n    private identifier;\r\n    private disabled;\r\n    private editorInitialized;\r\n    /**\r\n     * Is readonly mode, default:false\r\n     */\r\n    readonly: boolean;\r\n    /**\r\n     * The ck-editor config object.\r\n     */\r\n    config: any;\r\n    /**\r\n     * The special skin, default: moono-lisa\r\n     */\r\n    skin: string;\r\n    /**\r\n     * The special language, default: en\r\n     */\r\n    language: string;\r\n    /**\r\n     * Use fullpage mode, default:false\r\n     */\r\n    fullPage: boolean;\r\n    /**\r\n     * Use inline mode, default: false\r\n     */\r\n    inline: boolean;\r\n    /**\r\n     * The editor id\r\n     */\r\n    id: string;\r\n    change: EventEmitter<{}>;\r\n    ready: EventEmitter<{}>;\r\n    blur: EventEmitter<{}>;\r\n    focus: EventEmitter<{}>;\r\n    textareaRef: ElementRef;\r\n    private static getRandomIdentifier;\r\n    onChange: (value: string) => void;\r\n    onTouched: () => void;\r\n    readonly instance: any;\r\n    constructor(ngZone: NgZone, hostEl: ElementRef);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngAfterViewChecked(): void;\r\n    ngOnDestroy(): void;\r\n    private initEditor;\r\n    private destroyEditor;\r\n    private updateValue;\r\n    private documentContains;\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: (value: string) => void): void;\r\n    registerOnTouched(fn: () => void): void;\r\n    setDisabledState?(isDisabled: boolean): void;\r\n}\r\n"]}