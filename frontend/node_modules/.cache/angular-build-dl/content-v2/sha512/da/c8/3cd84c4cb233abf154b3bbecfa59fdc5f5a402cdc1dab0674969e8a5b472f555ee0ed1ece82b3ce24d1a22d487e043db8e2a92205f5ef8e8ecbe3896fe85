{"version":3,"sources":["webpack:///src/app/shared/service/websocket.service.ts"],"names":["WebsocketService","httpService","dataService","authService","socket","callback","fromEvent","subscribe","disconnect_officer","user","connect","console","log","data","emit","ok","obj","providedIn"],"mappings":";;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAMA;;;UAIaA,gB;AAEX;AACA;AACA,kCACUC,WADV,EAEUC,WAFV,EAGUC,WAHV,EAIUC,MAJV,CAIyB;AAJzB,U;;;AACU,eAAAH,WAAA,GAAAA,WAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA,C,CAER;AACA;AACD;;;;iBAED,4BAAmBC,QAAnB,EAA6B;;;AAC3B,uBAAKD,MAAL,MAAW,IAAX,IAAW,aAAX,GAAW,MAAX,GAAW,GACPE,SADO,CACG,oBADH,EAERC,SAFQ,CAEE,KAAKC,kBAFP,CAAX;AAGD;;;iBACD,8BAAqBC,IAArB,EAA2B;AACzB,gBAAI,CAACA,IAAL,EAAW;AACX,iBAAKL,MAAL,CAAYM,OAAZ,GAFyB,CAGzB;AACA;;AACAC,mBAAO,CAACC,GAAR,CAAY,kBAAZ,EALyB,CAMzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA,iBAAKR,MAAL,CAAYE,SAAZ,CAAsB,oBAAtB,EAA4CC,SAA5C,CAAsD,UAACM,IAAD,EAAU;AAC9DF,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCC,IAAlC;AACD,aAFD;AAGD;;;iBACD,wBAAe;AACb,mBAAO,KAAKT,MAAL,CAAYE,SAAZ,CAAsB,cAAtB,CAAP;AACD;;;iBACD,gCAAuB;AACrB,mBAAO,KAAKF,MAAL,CAAYE,SAAZ,CAAsB,sBAAtB,CAAP;AACD;;;iBACD,gCAAuB;AACrB,iBAAKF,MAAL,CAAYU,IAAZ,CAAiB,sBAAjB,EAAyC;AAAEC,gBAAE,EAAE;AAAN,aAAzC;AACD;;;iBACD,gCAAuB;AACrB,mBAAO,KAAKX,MAAL,CAAYE,SAAZ,CAAsB,sBAAtB,CAAP;AACD;;;iBACD,oBAAWU,GAAX,EAAgB;AACd,iBAAKZ,MAAL,CAAYU,IAAZ,CAAiB,YAAjB,EAA+BE,GAA/B;AACD;;;iBACD,uBAAcP,IAAd,EAAoB;AAClB,iBAAKL,MAAL,CAAYU,IAAZ,CAAiB,eAAjB,EAAkCL,IAAlC;AACD;;;iBACD,wBAAeO,GAAf,EAAoB;AAClB,iBAAKZ,MAAL,CAAYU,IAAZ,CAAiB,gBAAjB,EAAmCE,GAAnC;AACD;;;;;;;yBAjEUhB,gB,EAAgB,uI,EAAA,uI,EAAA,uI,EAAA,4G;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB,K;AAAA,oBAFf;;;;;wEAEDA,gB,EAAgB;gBAH5B,wDAG4B;iBAHjB;AACViB,sBAAU,EAAE;AADF,W;AAGiB,U","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpService } from 'src/app/shared/service/http.service';\r\nimport { AuthService } from 'src/app/shared/service/auth.service';\r\nimport { DataService } from 'src/app/shared/service/data.service';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n// import { NativeRingtones } from '@ionic-native/native-ringtones/ngx';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WebsocketService {\r\n  user: any;\r\n  // messaging: BehaviorSubject<any> = new BehaviorSubject(null);\r\n  // nextUserDisplay: BehaviorSubject<any> = new BehaviorSubject(null);\r\n  constructor(\r\n    private httpService: HttpService,\r\n    private dataService: DataService,\r\n    private authService: AuthService,\r\n    private socket: Socket // private ringtones: NativeRingtones\r\n  ) {\r\n    // this.authService.user$.subscribe(user=>{this.user = user;})\r\n    // this.messaging.next(0);\r\n  }\r\n  websocket_server;\r\n  disconnect_officer(callback) {\r\n    this.socket\r\n      ?.fromEvent('disconnect_officer')\r\n      .subscribe(this.disconnect_officer);\r\n  }\r\n  websocket_connection(user) {\r\n    if (!user) return;\r\n    this.socket.connect();\r\n    // let name = `user-${new Date().getTime()}`;\r\n    // this.currentUser = name;\r\n    console.log('socket connected');\r\n    // this.socket.emit('set-name-queue', user.token);\r\n    //  this.socket.fromEvent('users-changed').subscribe(data => {\r\n    //   let user = data['user'];\r\n    //   if (data['event'] === 'left') {\r\n    //     console.log('User left: ' + user, data['users'])\r\n    //     // this.showToast('User left: ' + user);\r\n    //   } else {\r\n    //     console.log('User joined: ' + user, data['users'])\r\n    //     // this.showToast('User joined: ' + user);\r\n    //   }\r\n    // });\r\n\r\n    // this.socket.fromEvent('queue_next_user').subscribe((data) => {\r\n    //   console.log('queue_next_user', data);\r\n    //   // this.nextUserDisplay.next(data);\r\n    // });\r\n    this.socket.fromEvent('queue_send_officer').subscribe((data) => {\r\n      console.log('queue_send_officer', data);\r\n    });\r\n  }\r\n  menu_updated() {\r\n    return this.socket.fromEvent('menu_updated');\r\n  }\r\n  next_service_display() {\r\n    return this.socket.fromEvent('next_service_display');\r\n  }\r\n  connect_user_display() {\r\n    this.socket.emit('connect_user_display', { ok: true });\r\n  }\r\n  next_service_officer() {\r\n    return this.socket.fromEvent('next_service_officer');\r\n  }\r\n  queue_next(obj) {\r\n    this.socket.emit('queue_next', obj);\r\n  }\r\n  queue_officer(user) {\r\n    this.socket.emit('queue_officer', user);\r\n  }\r\n  queue_new_user(obj) {\r\n    this.socket.emit('queue_new_user', obj);\r\n  }\r\n}\r\n\r\n// import { Injectable } from '@angular/core';\r\n// import { HttpService } from '@app/services/http.service';\r\n// import { DataService } from '@app/services/data.service';\r\n\r\n// @Injectable({\r\n//   providedIn: 'root'\r\n// })\r\n// export class WebsocketService {\r\n\r\n//   constructor(\r\n//       private httpService: HttpService,\r\n//       private dataService: DataService\r\n//     ) { }\r\n//   websocket_server;\r\n//   websocket_connection(user){\r\n//       if(!user)return;\r\n//       // this.websocket_server = new WebSocket(\"ws://2shtest.uz:8080\");\r\n//       // this.websocket_server = new WebSocket(\"ws://213.230.99.94:55000\");\r\n//       var websocket_server = new WebSocket(\"ws://192.168.10.250:8888\");\r\n//       var th = this;\r\n//       this.websocket_server.onopen = function(e) {\r\n//         console.log('onopen');\r\n//         th.websocket_server.send(\r\n//           JSON.stringify({\r\n//             'type': 'socket',\r\n//             'user_id': user.token,\r\n//           })\r\n//         );\r\n//       };\r\n//       this.websocket_server.onerror = function(e) {\r\n//         console.log('onerror', e)\r\n//       }\r\n//       this.websocket_server.onmessage = function(e) {\r\n//         console.log('onmessage', e.data)\r\n//         if (e.data) {\r\n//           var data = JSON.parse(e.data);\r\n//           switch (data.type) {\r\n//             case \"unsubs_to_order\":\r\n//             case \"subs_to_order\":\r\n//               th.httpService.get_data_active_order([data.driver_id, data.order_id])\r\n//               .subscribe((res:any)=>{\r\n//                 console.log('type', data.type);\r\n//                 console.log('order has new subscribtion', res);\r\n//                 if (res.status===200) {\r\n//                   th.dataService.offeredRides.forEach(offer=>{\r\n//                     if (offer.id === res.data.id)offer.subs = res.data.subs;\r\n//                   })\r\n//                   console.log('offers', th.dataService.offeredRides);\r\n//                 }\r\n//               })\r\n//               break;\r\n//             // case \"unsubs_to_order\":\r\n//             case \"going_order\":\r\n//             case \"rejected_order\":\r\n//               th.httpService.get_data_active_order([data.driver_id, data.order_id])\r\n//               .subscribe((res:any)=>{\r\n//                 console.log('type', data.type);\r\n//                 console.log('order has new subscribtion', res);\r\n//                 if (res.status===200) {\r\n//                   th.dataService.bookedRides.forEach(book=>{\r\n//                     if (book.id === res.data.id)book.subs = res.data.subs;\r\n//                   })\r\n//                   console.log('offers', th.dataService.bookedRides);\r\n//                 }\r\n//               })\r\n//               break;\r\n\r\n//             default:\r\n//               // code...\r\n//               break;\r\n//           }\r\n//         }\r\n//       }\r\n//   }\r\n//   websocket_send_msg(obj){\r\n//     this.websocket_server.send(\r\n//       JSON.stringify(obj)\r\n//     );\r\n//     // {\r\n//     //     'type': 'subs_to_order',\r\n//     //     'user_id': this.user.token,\r\n//     //     'send_to': ['XVoSTKMnjbuG8lF9MnMV8jUSWMgi'],\r\n//     //     'order_id': \"Salom\"\r\n//     //   }\r\n//   }\r\n//   // getUsers(obj_path){\r\n//   //   return this.http.post(environment.http.getUsers.path,\r\n//   //     {\r\n//   //       file_path: environment.http.getUsers.file,\r\n//   //       obj_path: obj_path,\r\n//   //     }\r\n//   //   );\r\n//   // }\r\n//   // setUsers(obj_path, obj){\r\n//   //   return this.http.post(environment.http.setUsers.path,\r\n//   //     {\r\n//   //       file_path: environment.http.setUsers.file,\r\n//   //       obj_path: obj_path,\r\n//   //       obj: obj,\r\n//   //     }\r\n//   //   );\r\n//   // }\r\n\r\n// }\r\n"]}