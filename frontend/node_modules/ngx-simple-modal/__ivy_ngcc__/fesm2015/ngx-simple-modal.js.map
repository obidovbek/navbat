{"version":3,"file":"ngx-simple-modal.js","sources":["ngx-simple-modal/simple-modal/simple-modal-options.ts","ngx-simple-modal/simple-modal/simple-modal-wrapper.component.ts","ngx-simple-modal/simple-modal/simple-modal-draggable.directive.ts","ngx-simple-modal/simple-modal/simple-modal-holder.component.ts","ngx-simple-modal/simple-modal/simple-modal.service.ts","ngx-simple-modal/simple-modal/simple-modal-service.factory.ts","ngx-simple-modal/simple-modal/simple-modal.module.ts","ngx-simple-modal/simple-modal/simple-modal.component.ts","ngx-simple-modal/ngx-simple-modal.ts"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const DefaultSimpleModalOptionConfig = new InjectionToken<SimpleModalOptions>('default-simple-modal.config');\n\nexport interface SimpleModalOptions {\n  closeOnEscape: boolean;\n  closeOnClickOutside: boolean;\n  bodyClass: string;\n  wrapperDefaultClasses: string;\n  wrapperClass: string;\n  draggableClass: string;\n  animationDuration: number;\n  autoFocus: boolean;\n  draggable: boolean;\n}\n\nexport type SimpleModalOptionsOverrides = Partial<SimpleModalOptions>;\n\nexport const defaultSimpleModalOptions: SimpleModalOptions = {\n  closeOnEscape: false,\n  closeOnClickOutside: false,\n  bodyClass: 'modal-open',\n  wrapperDefaultClasses: 'modal fade-anim',\n  wrapperClass: 'in',\n  draggableClass: 'draggable',\n  animationDuration: 300,\n  autoFocus: false,\n  draggable: false,\n};\n","import {\n  Component,\n  ComponentFactoryResolver,\n  ElementRef,\n  OnDestroy,\n  ReflectiveInjector,\n  Type,\n  ViewChild,\n  ViewContainerRef, ComponentRef,\n} from '@angular/core';\nimport { SimpleModalComponent } from './simple-modal.component';\n\n/**\n * The modal backdrop wrapping wrapper to the modal\n */\n@Component({\n  selector: 'simple-modal-wrapper',\n  template: `\n    <div #wrapper [ngClass]=\"modalClasses\" [ngStyle]=\"{ display: 'block' }\" role=\"dialog\">\n      <ng-template #viewContainer></ng-template>\n    </div>\n  `,\n})\nexport class SimpleModalWrapperComponent implements OnDestroy {\n  /**\n   * Target viewContainer to insert modal content component\n   */\n  @ViewChild('viewContainer', { read: ViewContainerRef, static: true }) viewContainer;\n\n  /**\n   * Link wrapper DOM element\n   */\n  @ViewChild('wrapper', { read: ElementRef, static: true })\n  wrapper: ElementRef;\n\n  /**\n   * Wrapper modal and fade classes\n   */\n  modalClasses = 'modal fade-anim';\n\n  /**\n   * Dialog content componet\n   * @type {SimpleModalComponent}\n   */\n  content: SimpleModalComponent<any, any>;\n\n  /**\n   * Click outside callback\n   */\n  clickOutsideCallback: (event: MouseEvent) => void;\n\n  /**\n   * Constructor\n   * @param {ComponentFactoryResolver} resolver\n   */\n  constructor(private resolver: ComponentFactoryResolver) {}\n\n  /**\n   * Adds content modal component to wrapper\n   * @param {Type<SimpleModalComponent>} component\n   * @return {SimpleModalComponent}\n   */\n  addComponent<T, T1>(component: Type<SimpleModalComponent<T, T1>>): {ref: ComponentRef<SimpleModalComponent<T, T1>>, component: SimpleModalComponent<T, T1>} {\n    const factory = this.resolver.resolveComponentFactory(component);\n    const injector = ReflectiveInjector.fromResolvedProviders([], this.viewContainer.injector);\n    const componentRef = factory.create(injector);\n    this.viewContainer.insert(componentRef.hostView);\n    this.content = <SimpleModalComponent<T, T1>>componentRef.instance;\n    this.content.wrapper = this.wrapper;\n    return {ref: componentRef, component: this.content};\n  }\n\n  /**\n   * Configures the function to call when you click on background of a modal but not the contents\n   * @param callback\n   */\n  onClickOutsideModalContent(callback: () => void) {\n    const containerEl = this.wrapper.nativeElement;\n\n    this.clickOutsideCallback = (event: MouseEvent) => {\n      if (event.target === containerEl) {\n        callback();\n      }\n    };\n\n    containerEl.addEventListener('click', this.clickOutsideCallback, false);\n  }\n\n  ngOnDestroy() {\n    if (this.clickOutsideCallback) {\n      const containerEl = this.wrapper.nativeElement;\n      containerEl.removeEventListener('click', this.clickOutsideCallback, false);\n      this.clickOutsideCallback = null;\n    }\n  }\n}\n","import {\n  Directive,\n  AfterViewInit,\n  OnDestroy,\n  Input,\n  Output,\n  ElementRef,\n  NgZone,\n  EventEmitter,\n  Renderer2,\n  OnChanges\n} from '@angular/core';\nimport { Subject, fromEvent } from 'rxjs';\nimport { filter, switchMap, map, takeUntil } from 'rxjs/operators';\n\nexport interface DraggedEvent {\n  x: number;\n  y: number;\n}\n\nexport interface DragOffset {\n  x?: number;\n  y?: number;\n}\n\n@Directive({\n  selector: '[dialogDraggable]'\n})\nexport class DraggableDirective implements AfterViewInit, OnChanges, OnDestroy {\n  @Input()\n  dragHandle?: string | Element;\n  @Input()\n  dragTarget: string | Element;\n  @Input()\n  dragEnabled = false;\n  @Input()\n  set dialogDragOffset(offset: DragOffset) {\n    this.reset(offset);\n  }\n  @Output()\n  dragged = new EventEmitter<DraggedEvent>();\n\n  /** Element to be dragged */\n  private target: HTMLElement;\n  /** Drag handle */\n  private handle: Element;\n  private delta = { x: 0, y: 0 };\n  private offset = { x: 0, y: 0 };\n  private enabled = true;\n  private destroy$ = new Subject<void>();\n\n  constructor(private host: ElementRef, private zone: NgZone, private renderer: Renderer2) {}\n\n  public ngAfterViewInit(): void {\n    if (!this.enabled) {\n      return;\n    }\n\n    this.init();\n  }\n\n  public ngOnChanges() {\n    if (!this.enabled && this.dragEnabled && this.dragTarget) {\n      this.enabled = true;\n      /** determine if the component has been init by the handle variable */\n      if (this.handle) {\n        this.renderer.setStyle(this.handle, 'cursor', 'move');\n      } else if (this.enabled) {\n        this.init();\n      }\n    }\n\n    if (!this.dragEnabled) {\n      this.enabled = false;\n      if (this.handle) {\n        this.renderer.setStyle(this.handle, 'cursor', '');\n      }\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n  reset(offset?: DragOffset) {\n    const defaultValues = { x: 0, y: 0 };\n    this.offset = { ...defaultValues, ...offset };\n    this.delta = { ...defaultValues };\n    this.translate();\n  }\n\n  private setupEvents() {\n    this.zone.runOutsideAngular(() => {\n      const mousedown$ = fromEvent<MouseEvent>(this.handle, 'mousedown');\n      const mousemove$ = fromEvent<MouseEvent>(document, 'mousemove');\n      const mouseup$ = fromEvent<MouseEvent>(document, 'mouseup');\n\n      const mousedrag$ = mousedown$.pipe(\n        filter(() => this.enabled),\n        map(event => ({\n          startX: event.clientX,\n          startY: event.clientY\n        })),\n        switchMap(({ startX, startY }) =>\n          mousemove$.pipe(\n            map(event => {\n              event.preventDefault();\n              this.delta = {\n                x: event.clientX - startX,\n                y: event.clientY - startY\n              };\n            }),\n            takeUntil(mouseup$)\n          )\n        ),\n        takeUntil(this.destroy$)\n      );\n\n      mousedrag$.subscribe(() => {\n        if (this.delta.x === 0 && this.delta.y === 0) {\n          return;\n        }\n\n        this.translate();\n      });\n\n      mouseup$\n        .pipe(\n          filter(() => this.enabled),\n          /** Only emit change if the element has moved */\n          filter(() => this.delta.x !== 0 || this.delta.y !== 0),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(() => {\n          this.offset.x += this.delta.x;\n          this.offset.y += this.delta.y;\n          this.dragged.emit(this.offset);\n          this.delta = { x: 0, y: 0 };\n        });\n    });\n  }\n\n  private translate() {\n    if (this.target) {\n      this.zone.runOutsideAngular(() => {\n        requestAnimationFrame(() => {\n          const transform = `translate(${this.offset.x + this.delta.x}px, ${this.offset.y + this.delta.y}px)`;\n          this.renderer.setStyle(this.target, 'transform', transform);\n        });\n      });\n    }\n  }\n\n  /**\n   * Init the directive\n   */\n  private init() {\n    if (!this.dragTarget) {\n      throw new Error('You need to specify the drag target');\n    }\n\n    this.handle =\n      this.dragHandle instanceof Element\n        ? this.dragHandle\n        : typeof this.dragHandle === 'string' && this.dragHandle\n        ? document.querySelector(this.dragHandle as string)\n        : this.host.nativeElement;\n\n    /** add the move cursor */\n    if (this.handle && this.enabled) {\n      this.renderer.addClass(this.handle, 'handle');\n    }\n\n    this.target =\n      this.dragTarget instanceof HTMLElement\n        ? this.dragTarget\n        : document.querySelector(this.dragTarget as string);\n\n    this.setupEvents();\n\n    this.translate();\n  }\n}\n","import { Component, ComponentFactoryResolver, ElementRef, Inject, Type, ViewContainerRef, ViewChild, Renderer2, ComponentRef, NgZone } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { DefaultSimpleModalOptionConfig, SimpleModalOptions, SimpleModalOptionsOverrides } from './simple-modal-options';\nimport { SimpleModalWrapperComponent } from './simple-modal-wrapper.component';\nimport { SimpleModalComponent } from './simple-modal.component';\nimport { DraggableDirective } from './simple-modal-draggable.directive';\n\n/**\n * View container manager which manages a list of modals currently active\n * inside the viewvontainer\n */\n@Component({\n  selector: 'simple-modal-holder',\n  template: '<ng-template #viewContainer></ng-template>',\n})\nexport class SimpleModalHolderComponent {\n  /**\n   * Target viewContainer to insert modals\n   */\n  @ViewChild('viewContainer', { read: ViewContainerRef, static: true }) viewContainer;\n\n  /**\n   * modal collection, maintained by addModal and removeModal\n   * @type {Array<SimpleModalComponent> }\n   */\n  modals: Array<SimpleModalComponent<any, any>> = [];\n\n  /**\n   * if auto focus is on and no element focused, store it here to be restored back after close\n   */\n  previousActiveElement = null;\n\n  /**\n   * Constructor\n   * @param {ComponentFactoryResolver} resolver\n   * @param renderer\n   * @param ngZone\n   * @param defaultSimpleModalOptions\n   */\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private renderer: Renderer2,\n    private ngZone: NgZone,\n    @Inject(DefaultSimpleModalOptionConfig) private defaultSimpleModalOptions: SimpleModalOptions,\n  ) {\n  }\n\n  /**\n   * Configures then adds modal to the modals array, and populates with data passed in\n   * @param {Type<SimpleModalComponent>} component\n   * @param {object?} data\n   * @param {SimpleModalOptionsOverrides?} options\n   * @return {Observable<*>}\n   */\n  addModal<T, T1>(\n    component: Type<SimpleModalComponent<T, T1>>,\n    data?: T,\n    options?: SimpleModalOptionsOverrides,\n  ): Observable<T1> {\n    // create component\n    if (!this.viewContainer) {\n      return of(null);\n    }\n    const factory = this.resolver.resolveComponentFactory(SimpleModalWrapperComponent);\n    const componentRef = this.viewContainer.createComponent(factory);\n    const modalWrapper: SimpleModalWrapperComponent = <SimpleModalWrapperComponent>(\n      componentRef.instance\n    );\n    const { ref: _componentRef, component: _component } = modalWrapper.addComponent(component);\n\n    // assign options refs\n    _component.options = options = Object.assign({}, this.defaultSimpleModalOptions, options) as SimpleModalOptions;\n\n    // set base classes for wrapper\n    modalWrapper.modalClasses = options.wrapperDefaultClasses;\n\n    // add to stack\n    this.modals.push(_component);\n\n    // wait a tick then setup the following while adding a modal\n    this.wait().then(() => {\n      this.toggleWrapperClass(modalWrapper.wrapper, options.wrapperClass);\n      this.toggleBodyClass(options.bodyClass);\n      if (options.draggable) {\n        this.setDraggable(_componentRef, options);\n      }\n      this.wait(options.animationDuration).then(() => {\n        this.autoFocusFirstElement(_component.wrapper, options.autoFocus);\n        _component.markAsReady();\n      });\n    });\n\n    // when closing modal remove it\n    _component.onClosing(modal => this.removeModal(modal));\n\n    // if clicking on background closes modal\n    this.configureCloseOnClickOutside(modalWrapper);\n\n    // map and return observable\n    _component.mapDataObject(data);\n\n    return _component.setupObserver();\n  }\n\n  /**\n   * triggers components close function\n   * to take effect\n   * @returns {Promise<void>}\n   * @param closingModal\n   */\n  removeModal(closingModal: SimpleModalComponent<any, any>): Promise<any> {\n    const options = closingModal.options;\n    this.toggleWrapperClass(closingModal.wrapper, options.wrapperClass);\n    return this.wait(options.animationDuration).then(() => {\n      this.removeModalFromArray(closingModal);\n      this.toggleBodyClass(options.bodyClass);\n      this.restorePreviousFocus();\n    });\n  }\n\n  /**\n   * Instructs all open modals to\n   */\n  removeAllModals(): Promise<any> {\n    return Promise.all(this.modals.map(modal => this.removeModal(modal)));\n  }\n\n  /**\n   * Bind a body class 'modal-open' to a condition of modals in pool > 0\n   * @param bodyClass - string to add and remove from body in document\n   */\n  private toggleBodyClass(bodyClass: string): void {\n    if (!bodyClass) {\n      return;\n    }\n    const body = document.getElementsByTagName('body')[0];\n    const bodyClassItems = bodyClass.split(' ');\n    if (!this.modals.length) {\n      body.classList.remove(...bodyClassItems);\n    } else {\n      body.classList.add(...bodyClassItems);\n    }\n  }\n\n  /**\n   * if the option to close on background click is set, then hook up a callback\n   * @param modalWrapper\n   */\n  private configureCloseOnClickOutside(modalWrapper: SimpleModalWrapperComponent) {\n    modalWrapper.onClickOutsideModalContent(() => {\n      if (modalWrapper.content.options.closeOnClickOutside) {\n        modalWrapper.content.close();\n      }\n    });\n  }\n\n  /**\n   * Auto focus o the first element if autofocus is on\n   * @param componentWrapper\n   * @param autoFocus\n   */\n  private autoFocusFirstElement(componentWrapper: ElementRef, autoFocus: boolean) {\n    if (autoFocus) {\n      const focusable = componentWrapper.nativeElement.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])',\n      );\n      if (focusable && focusable.length) {\n        this.previousActiveElement = document.activeElement;\n        focusable[0].focus();\n      }\n    }\n  }\n\n  /**\n   * Restores the last focus is there was one\n   */\n  private restorePreviousFocus() {\n    if (this.previousActiveElement) {\n      this.previousActiveElement.focus();\n      this.previousActiveElement = null;\n    }\n  }\n\n  /**\n   * Configure the adding and removal of a wrapper class - predominantly animation focused\n   * @param modalWrapperEl\n   * @param wrapperClass\n   */\n  private toggleWrapperClass(modalWrapperEl: ElementRef, wrapperClass: string): void {\n    const wrapperClassList = modalWrapperEl.nativeElement.classList;\n    const wrapperClassItems = wrapperClass.split(' ');\n    if (wrapperClassList.toString().indexOf(wrapperClass) !== -1) {\n      wrapperClassList.remove(...wrapperClassItems);\n    } else {\n      wrapperClassList.add(...wrapperClassItems);\n    }\n  }\n\n  /**\n   * Enables the drag option on the modal if the options have it enabled\n   * @param component\n   * @param options\n   * @private\n   */\n  private setDraggable(component: ComponentRef<SimpleModalComponent<any, any>>, options: SimpleModalOptionsOverrides): void {\n    const draggableDirective = new DraggableDirective(component.location, this.ngZone, this.renderer);\n    draggableDirective.dragTarget = component.location.nativeElement;\n    draggableDirective.dragHandle = component.instance.handle ? component.instance.handle.nativeElement : undefined;\n    draggableDirective.ngAfterViewInit();\n    component.location.nativeElement.classList.add(options.draggableClass);\n  }\n\n  /**\n   * Helper function for a more readable timeout\n   * @param ms\n   */\n  private wait(ms: number = 0): Promise<unknown> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(), ms);\n    });\n  }\n\n  /**\n   * Instructs the holder to remove the modal and\n   * removes this component from the collection\n   * @param {SimpleModalComponent} component\n   */\n  private removeModalFromArray(component): void {\n    const index = this.modals.indexOf(component);\n    if (index > -1) {\n      this.viewContainer.remove(index);\n      this.modals.splice(index, 1);\n    }\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Optional,\n  Type,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SimpleModalHolderComponent } from './simple-modal-holder.component';\nimport { SimpleModalComponent } from './simple-modal.component';\nimport { SimpleModalOptionsOverrides } from './simple-modal-options';\n\nexport class SimpleModalServiceConfig {\n  container: HTMLElement | string = null;\n}\n\n@Injectable()\nexport class SimpleModalService {\n  /**\n   * Placeholder of modals\n   * @type {SimpleModalHolderComponent}\n   */\n  private modalHolderComponent: SimpleModalHolderComponent;\n\n  /**\n   * HTML container for modals\n   * type {HTMLElement | string}\n   */\n  private _container;\n\n  /**\n   * @param {ComponentFactoryResolver} resolver\n   * @param {ApplicationRef} applicationRef\n   * @param {Injector} injector\n   * @param {SimpleModalServiceConfig} config\n   */\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector,\n    @Optional() config: SimpleModalServiceConfig\n  ) {\n    if (config) {\n      this.container = config.container as any;\n    }\n  }\n\n  /**\n   * Adds modal\n   * @param {Type<SimpleModalComponent<T, T1>>} component\n   * @param {T?} data\n   * @param {SimpleModalOptionsOverrides?} options\n   * @return {Observable<T1>}\n   */\n  addModal<T, T1>(\n    component: Type<SimpleModalComponent<T, T1>>,\n    data?: T,\n    options?: SimpleModalOptionsOverrides\n  ): Observable<T1> {\n    if (!this.modalHolderComponent) {\n      this.modalHolderComponent = this.createSimpleModalHolder();\n    }\n    return this.modalHolderComponent.addModal<T, T1>(component, data, options);\n  }\n\n  /**\n   * Hides and removes modal from DOM, resolves promise when fully removed\n   * @param {SimpleModalComponent} component\n   * @return {Promise<{}>}\n\n   */\n  removeModal(component: SimpleModalComponent<any, any>): Promise<{}> {\n    if (!this.modalHolderComponent) {\n      return Promise.resolve({});\n    }\n    return this.modalHolderComponent.removeModal(component);\n  }\n\n  /**\n   * Closes all modals, resolves promise when they're fully removed\n   * @return {Promise<{}>}\n   */\n  removeAll(): Promise<{}> {\n    if (!this.modalHolderComponent) {\n      return Promise.resolve({});\n    }\n    return this.modalHolderComponent.removeAllModals();\n  }\n\n  /**\n   * Accessor for contain - will auto generate from string\n   * if needed or default to the root element if nothing was set\n   */\n\n  private set container(c) {\n    this._container = c;\n  }\n\n  private get container(): HTMLElement {\n    if (typeof this._container === 'string') {\n      this._container = document.getElementById(this._container);\n    }\n\n    if (!this._container && this.applicationRef['components'].length) {\n      const componentRootViewContainer = this.applicationRef['components'][0];\n      this.container = (componentRootViewContainer.hostView as EmbeddedViewRef<any>)\n        .rootNodes[0] as HTMLElement;\n    }\n\n    // fallback\n    if (!this._container || typeof this._container === 'string') {\n      this._container = document.getElementsByTagName('body')[0];\n    }\n\n    return this._container;\n  }\n\n  /**\n   * Creates and add to DOM modal holder component\n   * @return {SimpleModalHolderComponent}\n   */\n  private createSimpleModalHolder(): SimpleModalHolderComponent {\n    const componentFactory = this.resolver.resolveComponentFactory(SimpleModalHolderComponent);\n\n    const componentRef = componentFactory.create(this.injector);\n    const componentRootNode = (componentRef.hostView as EmbeddedViewRef<any>)\n      .rootNodes[0] as HTMLElement;\n\n    this.applicationRef.attachView(componentRef.hostView);\n\n    componentRef.onDestroy(() => {\n      this.applicationRef.detachView(componentRef.hostView);\n    });\n\n    this.container.appendChild(componentRootNode);\n\n    return componentRef.instance;\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injector } from '@angular/core';\n\nimport { SimpleModalService, SimpleModalServiceConfig } from './simple-modal.service';\n\n/**\n * Modal service factory. Creates modal service with options\n * @param { ComponentFactoryResolver } resolver\n * @param { ApplicationRef } applicationRef\n * @param { Injector } injector\n * @param { SimpleModalServiceConfig } options\n * @return { SimpleModalService }\n */\nexport function SimpleModalServiceFactory(resolver: ComponentFactoryResolver,\n                                          applicationRef: ApplicationRef,\n                                          injector: Injector,\n                                          options: SimpleModalServiceConfig) {\n    return new SimpleModalService(resolver, applicationRef, injector, options);\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  Injector,\n  ModuleWithProviders,\n  NgModule,\n} from '@angular/core';\n\nimport { SimpleModalHolderComponent } from './simple-modal-holder.component';\nimport { SimpleModalWrapperComponent } from './simple-modal-wrapper.component';\nimport { SimpleModalService, SimpleModalServiceConfig } from './simple-modal.service';\nimport { SimpleModalServiceFactory } from './simple-modal-service.factory';\nimport {\n  defaultSimpleModalOptions,\n  DefaultSimpleModalOptionConfig,\n  SimpleModalOptions,\n} from './simple-modal-options';\nimport { DraggableDirective } from './simple-modal-draggable.directive';\n\n@NgModule({\n  declarations: [SimpleModalHolderComponent, SimpleModalWrapperComponent, DraggableDirective],\n  providers: [\n    SimpleModalService,\n    {\n      provide: DefaultSimpleModalOptionConfig,\n      useValue: defaultSimpleModalOptions,\n    },\n  ],\n  imports: [CommonModule],\n  entryComponents: [SimpleModalHolderComponent, SimpleModalWrapperComponent],\n})\nexport class SimpleModalModule {\n  static forRoot(\n    config: SimpleModalServiceConfig,\n    defaultModalOptions?: SimpleModalOptions\n  ): ModuleWithProviders<SimpleModalModule> {\n    return {\n      ngModule: SimpleModalModule,\n      providers: [\n        { provide: SimpleModalServiceConfig, useValue: config },\n        {\n          provide: SimpleModalService,\n          useFactory: SimpleModalServiceFactory,\n          deps: [ComponentFactoryResolver, ApplicationRef, Injector, SimpleModalServiceConfig],\n        },\n        {\n          provide: DefaultSimpleModalOptionConfig,\n          useValue: defaultModalOptions || defaultSimpleModalOptions,\n        }\n      ],\n    };\n  }\n\n  constructor() {}\n}\n","import { ElementRef, HostListener, OnDestroy } from '@angular/core';\nimport { Observable, Observer, Subject, BehaviorSubject } from 'rxjs';\n\nimport { SimpleModalOptions } from './simple-modal-options';\n\nexport interface OnDestroyLike {\n  ngOnDestroy(): void;\n  [key: string]: any;\n}\n\n/**\n * Abstract modal\n * @template T - modal data;\n * @template T1 - modal result\n */\nexport abstract class SimpleModalComponent<T, T1> {\n  /**\n   * Observer to return result from modal\n   */\n  private observer: Observer<T1>;\n\n  /**\n   * Drag handle\n   */\n  handle: ElementRef | undefined;\n\n  /**\n   * Dialog result\n   * @type {T1}\n   */\n  result: T1;\n\n  /**\n   * Dialog wrapper (modal placeholder)\n   */\n  wrapper: ElementRef;\n\n  /**\n   * ref of options for this component\n   */\n  options: SimpleModalOptions;\n\n  /**\n   * ready$ is when all animations and focusing have comleted\n   */\n  _ready$ = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Callback to the holders close function\n   */\n  private closerCallback: (component) => Promise<any> = () => Promise.resolve();\n\n  /**\n   * Constructor\n   */\n  constructor() {}\n\n  /**\n   * Maps your object passed in the creation to fields in your own Dialog classes\n   * @param {T} data\n   */\n  mapDataObject(data: T): void {\n    data = data || <T>{};\n    const keys = Object.keys(data);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      if (\n        data[key] &&\n        this[key] &&\n        typeof data[key] === 'object' &&\n        typeof this[key] === 'object'\n      ) {\n        Object.assign(this[key], data[key]);\n      } else {\n        this[key] = data[key];\n      }\n    }\n  }\n\n  /**\n   * Setup observer\n   * @return {Observable<T1>}\n   */\n  setupObserver(): Observable<T1> {\n    return Observable.create(observer => {\n      this.observer = observer;\n\n      // called if observable is unsubscribed to\n      return () => {\n        this.close();\n      };\n    });\n  }\n\n  /**\n   * Defines what happens when close is called - default this\n   * will just call the default remove modal process. If overridden\n   * must include\n   * @param callback\n   */\n  onClosing(callback: (component: SimpleModalComponent<any, any>) => Promise<any>): void {\n    this.closerCallback = callback;\n  }\n\n  /**\n   * Closes modal\n   */\n  close(): Promise<any> {\n    return this.closerCallback(this).then(v => {\n      if (this.observer) {\n        this.observer.next(this.result);\n        this.observer.complete();\n      }\n      return v;\n    });\n  }\n\n  /**\n   * keypress binding ngx way\n   * @param evt\n   */\n  @HostListener('document:keydown.escape', ['$event'])\n  onKeydownHandler(evt: KeyboardEvent) {\n    if (this.options && this.options.closeOnEscape) {\n      this.close();\n    }\n  }\n\n  get ready$() {\n    return this._ready$.asObservable();\n  }\n\n  markAsReady() {\n    this._ready$.next(true);\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {SimpleModalHolderComponent as ɵa} from './simple-modal/simple-modal-holder.component';\nexport {SimpleModalServiceFactory as ɵc} from './simple-modal/simple-modal-service.factory';\nexport {SimpleModalWrapperComponent as ɵb} from './simple-modal/simple-modal-wrapper.component';"]}